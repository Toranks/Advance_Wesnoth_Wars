#textdomain aww
# feature 21 Tools
# Author: Toranks

# Feature to manage micro_ai (very basic version)

[event]
    name=prestart
    first_time_only=no
    [set_variable]
        name=aww_21_fastai
        value=0
    [/set_variable]
    [set_variable]
        name=aww_21_side_number
        value=no
    [/set_variable]
    [set_variable]
        name=aww_21_ai_controller
        value=no
    [/set_variable]
    [set_variable]
        name=aww_21_ai_leader_controller
        value=no
    [/set_variable]
[/event]

[event]
    name=aww_21_fast_ai_on
    first_time_only=no
    [micro_ai]
        side=$aww_21_side_number
        ca_id=aww_fast_ai
        ai_type=fast_ai
        action=add
    [/micro_ai]
    [set_variable]
        name=aww_21_fastai
        add=1
    [/set_variable]
[/event]

[event]
    name=aww_21_fast_ai_off
    first_time_only=no
    [micro_ai]
        side=$aww_21_side_deactivated
        ca_id=aww_fast_ai
        ai_type=fast_ai
        action=delete
    [/micro_ai]
    [if]
        [variable]
            name=aww_21_fastai
            greater_than_equal_to=1
        [/variable]
        [then]
            [set_variable]
                name=aww_21_fastai
                sub=1
            [/set_variable]
        [/then]
    [/if]
    [set_variable]
        name=aww_21_side_number
        sub=no
    [/set_variable]
[/event]

# Random recolor to give more variety

# General event
[event]
    name=unit placed
    first_time_only=no
    [filter_condition]
        {VARIABLE_CONDITIONAL aww_21_recolor equals yes}
    [/filter_condition]
    [filter]
        [not]
            [filter_wml]
                [modifications]
                    [object]
                        id=aww_unit_recolor
                    [/object]
                [/modifications]
            [/filter_wml]
        [/not]
    [/filter]

    {VARIABLE_OP aww_r rand($aww_r_min..$aww_r_max)}
    {VARIABLE_OP aww_g rand($aww_g_min..$aww_g_max)}
    {VARIABLE_OP aww_b rand($aww_b_min..$aww_b_max)}
    {VARIABLE_OP aww_o rand($aww_o_min..$aww_o_max)}
    [modify_unit]
        [filter]
            id=$unit.id
        [/filter]
        {AWW_RECOLOR_OBJECT $aww_r $aww_g $aww_b $aww_o}
    [/modify_unit]
    {CLEAR_VARIABLE aww_r,aww_g,aww_b,aww_o}
[/event]

# activate
[event]
    name=aww_21_recolor
    first_time_only=no

    [store_unit]
        variable=all_units
        [filter]
            [not]
                [filter_wml]
                    [modifications]
                        [object]
                            id=aww_unit_recolor
                        [/object]
                    [/modifications]
                [/filter_wml]
            [/not]
        [/filter]
    [/store_unit]
    [foreach]
        array=all_units
        variable=u
        [do]
            {VARIABLE_OP aww_r rand($aww_r_min..$aww_r_max)}
            {VARIABLE_OP aww_g rand($aww_g_min..$aww_g_max)}
            {VARIABLE_OP aww_b rand($aww_b_min..$aww_b_max)}
            {VARIABLE_OP aww_o rand($aww_o_min..$aww_o_max)}
            [modify_unit]
                [filter]
                    id=$u.id
                [/filter]
                {AWW_RECOLOR_OBJECT $aww_r $aww_g $aww_b $aww_o}
            [/modify_unit]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE all_units,aww_r,aww_g,aww_b,aww_o}
[/event]

# deactivate
[event]
    name=aww_21_recolor_off
    first_time_only=no

    [aww_remove_object]
        object_id=aww_unit_recolor
    [/aww_remove_object]
[/event]

# Experience modifier

# Revise or delete object and rebuild if necessary
[event]
    name=unit placed
    id=aww_21_experience_modifier_revised
    first_time_only=no
    [filter]
        [filter_wml]
            [modifications]
                [object]
                    id=aww_experience_modifier
                [/object]
            [/modifications]
        [/filter_wml]
    [/filter]
    [if]
        {VARIABLE_CONDITIONAL unit.variables.aww_exp_mod not_equals $aww_21_experience_modifier}
        [then]
            [remove_object]
                id=aww_experience_modifier
            [/remove_object]
            [if]
                {VARIABLE_CONDITIONAL aww_21_experience_modifier greater_than 0}
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        {AWW_EXP_MODIFIER_OBJECT $aww_21_experience_modifier}
                        {VARIABLE aww_exp_mod $aww_21_experience_modifier}
                    [/modify_unit]
                [/then]
            [/if]
        [/then]
    [/if]
#ifdef LOTI_1_OR_2
    [if]
        {VARIABLE_CONDITIONAL unit.variables.loti_update_stats equals yes}
        [then]
            [modify_unit]
                [filter]
                    id=$unit.id
                [/filter]
                {CLEAR_VARIABLE loti_update_stats}
            [/modify_unit]
            {AWW_LOTI_POST_REBUILD $unit.id}
        [/then]
    [/if]
#endif
[/event]

# General event
[event]
    name=unit placed
    id=aww_21_experience_modifier_placed
    first_time_only=no
    [filter_condition]
        {VARIABLE_CONDITIONAL aww_21_experience_modifier greater_than 0}
    [/filter_condition]
    [filter]
        [not]
            [filter_wml]
                [modifications]
                    [object]
                        id=aww_experience_modifier
                    [/object]
                [/modifications]
            [/filter_wml]
        [/not]
    [/filter]
    [modify_unit]
        [filter]
            id=$unit.id
        [/filter]
        {AWW_EXP_MODIFIER_OBJECT $aww_21_experience_modifier}
        {VARIABLE aww_exp_mod $aww_21_experience_modifier}
    [/modify_unit]
#ifdef LOTI_1_OR_2
    {AWW_LOTI_POST_REBUILD $unit.id}
#endif
[/event]

# activate
[event]
    name=aww_21_experience_modifier
    first_time_only=no
    [modify_unit]
        [filter]
        [/filter]
        {AWW_EXP_MODIFIER_OBJECT $aww_21_experience_modifier}
        {VARIABLE aww_exp_mod $aww_21_experience_modifier}
    [/modify_unit]
#ifdef LOTI_1_OR_2
    [modify_unit]
        [filter]
            x,y=recall,recall
        [/filter]
        {VARIABLE loti_update_stats yes}
    [/modify_unit]
    [update_stats]
        [not]
            x,y=recall,recall
        [/not]
    [/update_stats]
#endif
[/event]

# deactivate
[event]
    name=aww_21_experience_reset
    first_time_only=no
    [aww_remove_object]
        object_id=aww_experience_modifier
    [/aww_remove_object]
[/event]

# Read and restore all values every scenario
[event]
    name=prestart
    id=aww_21_detect_and_set_config_values
    first_time_only=no
    [if]
        [variable]
            name=aww_21_poison_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.poison_amount = wml.variables["aww_21_poison"]
				>>
            [/lua]
        [/then]
    [/if]
    [if]
        [variable]
            name=aww_21_rest_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.rest_heal_amount = wml.variables["aww_21_rest"]
				>>
            [/lua]
        [/then]
    [/if]
    [if]
        [variable]
            name=aww_21_recall_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.recall_cost = wml.variables["aww_21_recall"]
				>>
            [/lua]
        [/then]
    [/if]
    [if]
        [variable]
            name=aww_21_combat_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.combat_experience = wml.variables["aww_21_combat"]
				>>
            [/lua]
        [/then]
    [/if]
    [if]
        [variable]
            name=aww_21_kill_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.kill_experience = wml.variables["aww_21_kill"]
				>>
            [/lua]
        [/then]
    [/if]
    [if]
        [variable]
            name=aww_21_village_income_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.village_income = wml.variables["aww_21_village_income"]
				>>
            [/lua]
        [/then]
    [/if]
    [if]
        [variable]
            name=aww_21_base_income_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.base_income = wml.variables["aww_21_base_income"]
				>>
            [/lua]
        [/then]
    [/if]
    [if]
        [variable]
            name=aww_21_village_support_set
            equals=yes
        [/variable]
        [then]
            [lua]
                code=<<
					wesnoth.game_config.village_support = wml.variables["aww_21_village_support"]
				>>
            [/lua]
        [/then]
    [/if]
    [lua]
        code=<<
            wml.variables["aww_21_poison_real"] = wesnoth.game_config.poison_amount
            wml.variables["aww_21_rest_real"] = wesnoth.game_config.rest_heal_amount
            wml.variables["aww_21_recall_real"] = wesnoth.game_config.recall_cost
            wml.variables["aww_21_combat_real"] = wesnoth.game_config.combat_experience
            wml.variables["aww_21_kill_real"] = wesnoth.game_config.kill_experience
            wml.variables["aww_21_village_income_real"] = wesnoth.game_config.village_income
            wml.variables["aww_21_base_income_real"] = wesnoth.game_config.base_income
            wml.variables["aww_21_village_support_real"] = wesnoth.game_config.village_support
        >>
    [/lua]
    [store_side]
        variable=stored_side
    [/store_side]
    {VARIABLE number 0}
    [repeat]
        times=$stored_side.length
        [do]
            {VARIABLE_OP number add 1}
            [clear_menu_item]
                id=leader_control_option_$number|_freeze_on,leader_control_option_$number|_freeze_off,leader_control_option_$number|_target_on,leader_control_option_$number|_target_off,leader_control_option_$number|_engage,leader_control_option_$number|_disengage
            [/clear_menu_item]
        [/do]
    [/repeat]
    [clear_menu_item]
        id=aww_ai_unit_controller
    [/clear_menu_item]
    {DISABLE_AI_CONTROLLER aww}
    # Instead of clearing these variables after ever time they are created, we can just
    # do it once at the end.
    [clear_variable]
        name=stored_leader,stored_side,leader_path
    [/clear_variable]
[/event]
