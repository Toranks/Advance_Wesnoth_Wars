#textdomain aww
### 13. AMBUSHED UNITS DO ATTACK SURPRISES ; AFTER A NORMAL/SURPRISE THEN CANNOT SURPRISES NEXT TURN
# Author: Ruvaak, Toranks
# Partially based on Bobs_RPG_Era/files/ability_events.cfg
# see event name=movement end / {MODIFY_UNIT (id=Mal Keshar) attacks_left 1}
# will imply 1 unit variables : aww_ambush_cooldown_turn

## reset cooldown turn increment when we starts a new scenario of a campaign.s
# note : not filtered for recall list, so perfect :
[event]
    name=start,aww_event_13_reset
    id=aww_13_trigger_ambush_cooldown_reset
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]

    [modify_unit]
        [filter]
            ability_type=hides
        [/filter]
        [variables]
            aww_ambush_cooldown_turn=0
        [/variables]
    [/modify_unit]
[/event]

## un-surprises units on cooldown:
# new turn is here to manage daytime-related hides like nightstalk
[event]
    name=new_turn,turn_refresh,side_turn_end
    id=aww_13_trigger_ambush_cooldown_refresh_turn
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]

    [store_unit]
        variable=ambushers
        [filter]
            ability_type=hides
            #ability_type_active=hides # TODO TEST
        [/filter]
    [/store_unit]

    [foreach]
		array=ambushers
        variable=ambusher
		[do]
			[if]
				{VARIABLE_CONDITIONAL ambusher.variables.aww_ambush_cooldown_turn greater_than $turn_number}
				[then]
					{VARIABLE ambusher.variables.preambush no}
					[unstore_unit]
						variable=ambusher
						#text=_"Uncovered!"
					[/unstore_unit]

					#{AWW_TERRAIN_LABEL $ambushers[$a].y $ambushers[$a].y _"Uncovered " {COLOR_HEAL}}
				[/then]
				[elseif]
					{VARIABLE_CONDITIONAL ambusher.variables.aww_ambush_cooldown_turn less_than_equal_to $turn_number}
					[then]
						{VARIABLE ambusher.variables.preambush yes}
						[unstore_unit]
							variable=ambusher
						[/unstore_unit]
					[/then]
				[/elseif]
				[elseif]
					{AWW_NOT_ISSET_VARIABLE ambusher.variables.aww_ambush_cooldown_turn}
					[then]
						{VARIABLE ambusher.variables.preambush yes}
						{VARIABLE ambusher.variables.aww_ambush_cooldown_turn 0}
						[unstore_unit]
							variable=ambusher
						[/unstore_unit]
					[/then]
				[/elseif]
			[/if]
		[/do]
	[/foreach]
    {CLEAR_VARIABLE ambushers}
[/event]

## un-surprises moving unit if still on cooldown (informative)
[event]
    name=moveto
    id=aww_13_trigger_ambush_cooldown_refresh_moveto
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]
    [filter]
        ability_type=hides
    [/filter]

    [if]
        {VARIABLE_CONDITIONAL unit.variables.aww_ambush_cooldown_turn greater_than $turn_number}
        [then]
            {VARIABLE unit.variables.preambush no}
            [unstore_unit]
                variable=unit
                #text=_"Uncovered M!"
            [/unstore_unit]

            #{AWW_TERRAIN_LABEL_CURRENT_SIDE_UNIT _"Uncovered M!" {COLOR_HEAL}}
        [/then]
    [/if]
    [allow_undo]
    [/allow_undo]
[/event]

## unsurprises + add cooldown for 1 turns to potential ambushers who attacks :
[event]
    name=attack_end
    id=aww_13_trigger_ambush_cooldown_refresh_attack
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
        {VARIABLE_CONDITIONAL unit.hitpoints greater_than 0}
    [/filter_condition]
    [filter]
        ability_type=hides
    [/filter]

    {VARIABLE unit.variables.preambush no}
    {AWW_VARIABLE_VALUE_OP unit.variables.aww_ambush_cooldown_turn $turn_number add 1}
    [unstore_unit]
        variable=unit
        #text=_"Uncovered A!"
    [/unstore_unit]

    #{AWW_TERRAIN_LABEL_CURRENT_SIDE_UNIT _"Uncovered A!" {COLOR_HEAL}}
[/event]

## manage if unit is hidden or not for the unit who start to moves

[event]
    name=exit_hex
    id=aww_13_trigger_ambush_startmove
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
        {VARIABLE_CONDITIONAL firstmove not_equals $unit.id}
    [/filter_condition]
    [store_unit]
        variable=hidden_units
        [filter]
            ability_type_active=hides
            [filter_vision]
                visible=no
            [/filter_vision]
        [/filter]
    [/store_unit]
    {VARIABLE firstmove $unit.id}
    [allow_undo]
    [/allow_undo]
[/event]

## manage surprises attacks
[event]
    name=moveto
    id=aww_13_trigger_ambush_moveto
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]
    [filter]
        [filter_adjacent]
            is_enemy=yes
            find_in=hidden_units
            [filter_wml]
                [variables]
                    preambush=yes
                [/variables]
            [/filter_wml]
            #ability=ambush,concealment,submerge,nightstalk,aww_ability_camouflage
            #ability_type=hides
        [/filter_adjacent]
    [/filter]

    #  {AWW_FLOAT_TEXT_CURRENT_SIDE_UNIT "TEST OK!" {COLOR_HEAL}}
    #  {AWW_TERRAIN_LABEL_CURRENT_SIDE_UNIT "TEST OK!" {COLOR_HEAL}}

    ### getting victim terrain defense to reduce damages taken by surprise attack : (value will be between 20-80):

    [store_unit_defense_on]
        variable=def_ratio
        loc_x,loc_y=$x1,$y1
    [/store_unit_defense_on]
    ## it return like 30 for a terrain defense of 70%. We divide by 100 to get 0.3, and use this as damage ratio in harm_unit :
    {VARIABLE_OP def_ratio divide 100}
    # {AWW_TERRAIN_LABEL_CURRENT_SIDE_UNIT $def_ratio {COLOR_HEAL}}

    {AWW_VARIABLE_VALUE_OP ambush_cooldown_turn $turn_number add 2}

    ### getting all ambushers ennemies :

    [store_unit]
        variable=ambushers
        [filter]
            find_in=hidden_units
            [filter_wml]
                [variables]
                    preambush=yes
                [/variables]
            [/filter_wml]
            [filter_adjacent]
                id=$unit.id
                is_enemy=yes
            [/filter_adjacent]
        [/filter]
    [/store_unit]

    [foreach]
		array=ambushers
        variable=ambusher
		[do]
			[if]
				{AWW_NOT_ISSET_VARIABLE ambusher.variables.aww_ambush_cooldown_turn}
				[or]
					{VARIABLE_CONDITIONAL ambusher.variables.aww_ambush_cooldown_turn less_than_equal_to $turn_number}
				[/or]
				[then]
					## so it can do surprise attack :

					#  [if]
					#      {VARIABLE_CONDITIONAL ambushers[$a].status.uncovered equals yes}
					#  [then]
					#      {AWW_TERRAIN_LABEL $ambushers[$a].x $ambushers[$a].y "uncovered"+$ambushers[$a].variables.aww_ambush_cooldown_turn {COLOR_WHITE}}
					#  [/then]
					#  [else]
					#      {AWW_TERRAIN_LABEL $ambushers[$a].x $ambushers[$a].y "covered"+$ambushers[$a].variables.aww_ambush_cooldown_turn {COLOR_WHITE}}
					#  [/else]
					#  [/if]

					### disable  attack of ambushed victims :

					[modify_unit]
						[filter]
							{AWW_EVENT_UNIT}
						[/filter]
						attacks_left=0
						#moves=1
					[/modify_unit]

					## Most of the time weapon 2 is a faster / ranger weapon, so more coherent it's used for surprise attack :
					[if]
						{VARIABLE_CONDITIONAL ambusher.attack[1].damage greater_than 0}
						{VARIABLE_CONDITIONAL ambusher.attack[1].number greater_than 0}
						[then]
							{VARIABLE ambusher_w_name $ambusher.attack[1].name}
							{VARIABLE ambusher_w_type $ambusher.attack[1].type}
							{VARIABLE ambusher_w_damage $ambusher.attack[1].damage}
							{VARIABLE ambusher_w_number $ambusher.attack[1].number}
						[/then]
						[else]
							{VARIABLE ambusher_w_name $ambusher.attack[0].name}
							{VARIABLE ambusher_w_type $ambusher.attack[0].type}
							{VARIABLE ambusher_w_damage $ambusher.attack[0].damage}
							{VARIABLE ambusher_w_number $ambusher.attack[0].number}
						[/else]
					[/if]

					[if]
						{VARIABLE_CONDITIONAL ambusher_w_damage greater_than 0}
						{VARIABLE_CONDITIONAL ambusher_w_number greater_than 0}
						[then]
							{AWW_VARIABLE_VALUE_OP ambush_damage $ambusher_w_damage multiply $ambusher_w_number}

							## max damage : half of ambushed unit max_hp
							{AWW_VARIABLE_VALUE_OP max_damage $unit.max_hitpoints divide 2}
							[if]
								{VARIABLE_CONDITIONAL ambush_damage greater_than $max_damage}
								[or]
									{VARIABLE_CONDITIONAL ambush_damage less_than 1}
								[/or]
								[then]
									{VARIABLE ambush_damage $max_damage}
								[/then]
							[/if]

							### surprise attack on ambushed victims :

							[message]
								speaker=$ambusher.id
								message=_"Surprise!"
								side_for=$side_number,$ambusher.side
							[/message]

							{AWW_VARIABLE_VALUE_OP ambush_damage $ambusher_w_damage multiply $ambusher_w_number}
							[harm_unit]
								[filter]
									id=$unit.id
								[/filter]
								[filter_second]
									id=$ambusher.id
								[/filter_second]
								amount=$ambush_damage
								damage_type=$ambusher_w_type
								alignment=$ambusher.alignment
								fire_event=yes
								animate=yes
								[primary_attack]
									name=$ambusher_w_name
								[/primary_attack]
								[secondary_attack]
									name=$unit.attack[0].name
								[/secondary_attack]
								experience=yes
								resistance_multiplier=$(1-$def_ratio)
							[/harm_unit]
							# saving unit variable :
							[modify_unit]
								[filter]
									id=$ambusher.id
								[/filter]		
								{VARIABLE aww_ambush_cooldown_turn $ambush_cooldown_turn}
								{VARIABLE preambush no}
								[status]
									uncovered=yes
								[/status]
							[/modify_unit]
							#  {AWW_TERRAIN_LABEL $ambushers[$a].x $ambushers[$a].y $ambusher_w_name {COLOR_WHITE}}
						[/then]
					[/if]
				[/then]
			[/if]

			{CLEAR_VARIABLE ambush_damage,max_damage,ambusher_w_damage,ambusher_w_number,ambusher_w_type,ambusher_w_name}
		[/do]
	[/foreach]


    #{AWW_FLOAT_TEXT_CURRENT_SIDE_UNIT _"???" {AWW_COLOR_ORANGE}}

    {CLEAR_VARIABLE ambushers,def_ratio,ambush_cooldown_turn,hidden_units,firstmove}
[/event]
