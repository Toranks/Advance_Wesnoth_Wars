#textdomain aww
### 13. AMBUSHED UNITS DO ATTACK SURPRISES ; AFTER A NORMAL/SURPRISE THEN CANNOT SURPRISES NEXT TURN
# Author: Ruvaak, Toranks
# Partially based on Bobs_RPG_Era/files/ability_events.cfg
# see event name=movement end / {MODIFY_UNIT (id=Mal Keshar) attacks_left 1}
# will imply 1 unit variables : aww_ambush_cooldown_turn

## reset cooldown turn increment when we starts a new scenario of a campaign.s
# note : not filtered for recall list, so perfect :
[event]
    name=start,aww_event_13_reset
    id=aww_13_trigger_ambush_cooldown_reset
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]

    [modify_unit]
        [filter]
            ability_type=hides
        [/filter]
        [variables]
            aww_ambush_cooldown_turn=0
        [/variables]
        [variables]
            preambush=yes
        [/variables]
		[object]
			id=aww_preambush_icon
			[effect]
				[filter]
					ability_type_active=hides
				[/filter]
				apply_to=overlay
				add="misc/aww-ambush-attack.png"
			[/effect]
		[/object]
    [/modify_unit]
[/event]

## un-surprises units on cooldown:
# new turn is here to manage daytime-related hides like nightstalk
[event]
    name=new_turn
    id=aww_13_trigger_ambush_cooldown_refresh_turn
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]

    [store_unit]
        variable=ambushers
        [filter]
            ability_type=hides
            #ability_type_active=hides # TODO TEST
        [/filter]
    [/store_unit]

    [foreach]
		array=ambushers
        variable=ambusher
		[do]
			[if]
				{VARIABLE_CONDITIONAL ambusher.variables.aww_ambush_cooldown_turn greater_than $turn_number}
				[then]
					[modify_unit]
						[filter]
							id=$ambusher.id
						[/filter]
						[variables]
							preambush=no
						[/variables]
					[/modify_unit]
					[remove_object]
						id=$ambusher.id
						object_id=aww_preambush_icon
					[/remove_object]
					#{AWW_TERRAIN_LABEL $ambushers[$a].y $ambushers[$a].y _"Uncovered " {COLOR_HEAL}}
				[/then]
				[elseif]
					{VARIABLE_CONDITIONAL ambusher.variables.aww_ambush_cooldown_turn less_than_equal_to $turn_number}
					[then]
						[modify_unit]
							[filter]
								id=$ambusher.id
							[/filter]
							[variables]
								preambush=yes
							[/variables]
							[object]
								id=aww_preambush_icon
								[effect]
									[filter]
										ability_type_active=hides
									[/filter]
									apply_to=overlay
									add="misc/aww-ambush-attack.png"
								[/effect]
							[/object]
						[/modify_unit]
					[/then]
				[/elseif]
				[elseif]
					{AWW_NOT_ISSET_VARIABLE ambusher.variables.aww_ambush_cooldown_turn}
					[then]
						[modify_unit]
							[filter]
								id=$ambusher.id
							[/filter]
							[object]
								id=aww_preambush_icon
								[effect]
									[filter]
										ability_type_active=hides
									[/filter]
									apply_to=overlay
									add="misc/aww-ambush-attack.png"
								[/effect]
							[/object]
							[variables]
								preambush=yes
							[/variables]
							[variables]
								aww_ambush_cooldown_turn=0
							[/variables]
						[/modify_unit]
					[/then]
				[/elseif]
			[/if]
		[/do]
	[/foreach]
    {CLEAR_VARIABLE ambushers}
[/event]

## unsurprises + add cooldown for 1 turns to potential ambushers who attacks :
[event]
    name=attack_end
    id=aww_13_trigger_ambush_cooldown_refresh_attack
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
        {VARIABLE_CONDITIONAL unit.hitpoints greater_than 0}
    [/filter_condition]
    [filter]
        ability_type=hides
    [/filter]

	[modify_unit]
		{AWW_EMBEDDED_FILTER_EVENT_UNIT}
		{VARIABLE preambush no}
		{AWW_VARIABLE_VALUE_OP aww_ambush_cooldown_turn $turn_number add $aww_ambush_cooldown_attack}
	[/modify_unit]
	
	[remove_object]
		{AWW_EVENT_UNIT}
		object_id=aww_preambush_icon
	[/remove_object]
	
    #{AWW_TERRAIN_LABEL_CURRENT_SIDE_UNIT _"Uncovered A!" {COLOR_HEAL}}
[/event]

## manage if unit is hidden or not for the unit who start to moves

[event]
    name=exit_hex
    id=aww_13_trigger_ambush_startmove
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
        {VARIABLE_CONDITIONAL firstmove not_equals $unit.id}
    [/filter_condition]
    [store_unit]
        variable=hidden_units
        [filter]
            ability_type_active=hides
            [filter_vision]
                visible=no
            [/filter_vision]
        [/filter]
    [/store_unit]
    {VARIABLE firstmove $unit.id}
    [allow_undo]
    [/allow_undo]
[/event]

## manage surprises attacks
[event]
    name=moveto
    id=aww_13_trigger_ambush_moveto
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]
    [filter]
        [filter_adjacent]
            is_enemy=yes
            find_in=hidden_units
            [filter_wml]
                [variables]
                    preambush=yes
                [/variables]
            [/filter_wml]
        [/filter_adjacent]
    [/filter]

    #  {AWW_FLOAT_TEXT_CURRENT_SIDE_UNIT "TEST OK!" {COLOR_HEAL}}
    #  {AWW_TERRAIN_LABEL_CURRENT_SIDE_UNIT "TEST OK!" {COLOR_HEAL}}

	[set_variable]
		name=victim_hitpoints
		value=$unit.hitpoints
	[/set_variable]
	
	### disable  attack of ambushed victims 
	[modify_unit]
		[filter]
			id=$unit.id
		[/filter]
		attacks_left=0
		[object]
			id=aww_disable_attacks
			[effect]
				apply_to=attack
				set_attacks=0
			[/effect]
		[/object]
	[/modify_unit]

    {AWW_VARIABLE_VALUE_OP ambush_cooldown_turn $turn_number add $aww_ambush_cooldown}

    ### getting all ambushers ennemies :

    [store_unit]
        variable=ambushers
        [filter]
            find_in=hidden_units
            [filter_wml]
                [variables]
                    preambush=yes
                [/variables]
            [/filter_wml]
            [filter_adjacent]
                id=$unit.id
                is_enemy=yes
            [/filter_adjacent]
        [/filter]
    [/store_unit]

    [foreach]
		array=ambushers
        variable=ambusher
		[do]
			[if]
				{VARIABLE_CONDITIONAL victim_hitpoints greater_than 0}
				[then]
					## so it can do surprise attack 
					## Most of the time weapon 2 is a faster / ranger weapon, so more coherent it's used for surprise attack :
					[if]
						{VARIABLE_CONDITIONAL ambusher.attack[1].damage greater_than 0}
						{VARIABLE_CONDITIONAL ambusher.attack[1].number greater_than 0}
						[then]
							{VARIABLE ambusher_w_damage $ambusher.attack[1].damage}
							{VARIABLE ambusher_w_number $ambusher.attack[1].number}
							{VARIABLE ambusher_w_index 1}
						[/then]
						[else]
							{VARIABLE ambusher_w_damage $ambusher.attack[0].damage}
							{VARIABLE ambusher_w_number $ambusher.attack[0].number}
							{VARIABLE ambusher_w_index 0}
						[/else]
					[/if]

					[if]
						{VARIABLE_CONDITIONAL ambusher_w_damage greater_than 0}
						{VARIABLE_CONDITIONAL ambusher_w_number greater_than 0}
						[then]
							### surprise attack on ambushed victims :
							[message]
								speaker=$ambusher.id
								message=_"Surprise!" ## +" Ambush Damage: $ambush_damage Multiplier: $aww_def_ratio Attack Damage: $ambusher_w_damage Number of attacks: $ambusher_w_number Type: $ambusher_w_type Weapon: $ambusher_w_name"
								side_for=$side_number,$ambusher.side
							[/message]
							[do_command]
								[attack]
									weapon=$ambusher_w_index
									defender_weapon=0
									[source]
										x=$ambusher.x
										y=$ambusher.y
									[/source]
									[destination]
										x=$unit.x
										y=$unit.y
									[/destination]
								[/attack]
							[/do_command]
							# saving unit variables and force uncovered unit (just to be sure) :
							[modify_unit]
								[filter]
									id=$ambusher.id
								[/filter]		
								[variables]
									aww_ambush_cooldown_turn=$ambush_cooldown_turn
								[/variables]
								[variables]
									preambush=no
								[/variables]
								[status]
									uncovered=yes
								[/status]
							[/modify_unit]
							[remove_object]
								id=$ambusher.id
								object_id=aww_preambush_icon
							[/remove_object]
							[store_unit]
								variable=ambushed
								[filter]
									id=$unit.id
								[/filter]
							[/store_unit]
							[set_variable]
								name=victim_hitpoints
								value=$ambushed.hitpoints
							[/set_variable]
							#  {AWW_TERRAIN_LABEL $ambushers[$a].x $ambushers[$a].y $ambusher_w_name {COLOR_WHITE}}
						[/then]
					[/if]
				[/then]
			[/if]
			{CLEAR_VARIABLE ambusher_w_damage,ambusher_w_number,ambusher_w_index,ambushed}
		[/do]
	[/foreach]

	[remove_object]
		object_id=aww_disable_attacks
	[/remove_object]
    #{AWW_FLOAT_TEXT_CURRENT_SIDE_UNIT _"???" {AWW_COLOR_ORANGE}}

    {CLEAR_VARIABLE ambushers,ambush_cooldown_turn,hidden_units,firstmove,victim_hitpoints}
[/event]

# Reload icon when moves, to activate and deactivate on real time, with undo support
[event]
    name=moveto
    id=aww_13_icon_reload
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]
    [filter]
		[filter_wml]
			[modifications]
				[object]
					id=aww_preambush_icon
				[/object]
			[/modifications]
		[/filter_wml]
    [/filter]
	
    [unstore_unit]
		variable=unit
    [/unstore_unit]
    [allow_undo]
    [/allow_undo]
	[on_undo]
		[unstore_unit]
			variable=unit
		[/unstore_unit]
	[/on_undo]
[/event]


# Reload icon when a unit dies, and adjacent units that have not attacked yet hide
[event]
    name=die
    id=aww_13_icon_reload
    first_time_only=no
    [filter_condition]
        {AWW_ENABLED_FEATURE_13}
    [/filter_condition]
    [filter]
		[filter_adjacent]
			[filter_wml]
				[modifications]
					[object]
						id=aww_preambush_icon
					[/object]
				[/modifications]
			[/filter_wml]			
		[/filter_adjacent]
    [/filter]
	[store_unit]
		[filter]
			{AWW_EVENT_UNIT}
			[filter_adjacent]
				[filter_wml]
					[modifications]
						[object]
							id=aww_preambush_icon
						[/object]
					[/modifications]
				[/filter_wml]
			[/filter_adjacent]
		[/filter]
		variable=ambushers
	[/store_unit]
	[foreach]
		array=ambushers
		variable=ambusher
		[do]
			[unstore_unit]
				variable=ambusher
			[/unstore_unit]
		[/do]
	[/foreach]
[/event]